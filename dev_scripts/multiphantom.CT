<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="24">
  <CheatEntries>
    <CheatEntry>
      <ID>12376</ID>
      <Description>"Activate on Attach"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10316</ID>
          <Description>"Disable Framerate Warning Disconnection"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>// Credits to Jellybaby34
[ENABLE]
// This aob may not work due to multiple results
aobscan(FrameRateWarnAOB,74 17 b9 * * * * e8 * * * * 8b)
registersymbol(FrameRateWarnAOB)
//code from here to '[DISABLE]' will be used to enable the cheat
FrameRateWarnAOB-1E:
db C3


[DISABLE]
//code from here till the end of the code will be used to disable the cheat
FrameRateWarnAOB-1E:
db 51
unregistersymbol(FrameRateWarnAOB)
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12375</ID>
          <Description>"Change Version Number"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat

// 2C is the version number of debug, 2E is current release
DARKSOULS.exe+7E73FA:
mov byte ptr [esp+1C],3C

DARKSOULS.exe+7E719D:
cmp byte ptr [eax],3C

DARKSOULS.exe+7E7229:
cmp byte ptr [eax],3C

[DISABLE]
//code from here till the end of the code will be used to disable the cheat
DARKSOULS.exe+7E73FA:
mov byte ptr [esp+1C],2E

DARKSOULS.exe+7E719D:
cmp byte ptr [eax],2E

DARKSOULS.exe+7E7229:
cmp byte ptr [eax],2E
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>7</ID>
          <Description>"fix malloc"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DARKSOULS.exe"+A63CA6:
push 00000120//(desired num of phantoms * 0x20)

 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DARKSOULS.exe"+A63CA6:
push 00000080
//Alt: db 68 80 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>8</ID>
          <Description>"fix memset"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DARKSOULS.exe"+A63CBA:
push 00000120
 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DARKSOULS.exe"+A63CBA:
push 00000080
//Alt: db 68 80 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>9</ID>
          <Description>"set number_of_char_slots_available"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
"DARKSOULS.exe"+A63CC1:
mov [edi],00000009//number of character slots
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DARKSOULS.exe"+A63CC1:
mov [edi],00000004
//Alt: db C7 07 04 00 00 00
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10317</ID>
          <Description>"force show summon signs"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//one of these governs red signs, another white
//(probably some other around governs dragon)
"DARKSOULS.exe"+9B51B7:
push 09 //max number of summons before signs dissapear
"DARKSOULS.exe"+9B51EB:
push 09 //max number of summons before signs dissapear

//Check that sums up all phantoms
"DARKSOULS.exe"+9B11BE:
cmp edx,3f //this is more than number of phantoms, but not sure by how much

//not 100% on this one
"DARKSOULS.exe"+92A47C:
cmp dword ptr [eax+10],09

//I dunno
alloc(newmem,64)
label(returnhere)

newmem:
cmp eax,9
jmp returnhere

"DARKSOULS.exe"+9B1271:
jmp newmem
nop
returnhere:

[DISABLE]
dealloc(newmem)
"DARKSOULS.exe"+9B51B7:
push 03

"DARKSOULS.exe"+9B51EB:
push 02

"DARKSOULS.exe"+9B11BE:
cmp edx,03

"DARKSOULS.exe"+92A47C:
cmp dword ptr [eax+10],02

"DARKSOULS.exe"+9B1271:
cmp eax,[esi+00000168]
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10321</ID>
          <Description>"players_connected_counts.ptr_to_PlayerArray setup"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
"DARKSOULS.exe"+AA2554:
cmp edx,09
"DARKSOULS.exe"+AA2569:
cmp ebx,09


[DISABLE]
"DARKSOULS.exe"+AA2554:
cmp edx,04

"DARKSOULS.exe"+AA2569:
cmp ebx,04
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10319</ID>
          <Description>"info_about_summons.summon_chars_data setup"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//allocation of the summon_chars_data array put in the info_about_summons struct
"DARKSOULS.exe"+806848:
push 2AD0 //16 + 1216*number of character slots

//counter limit for initing all items in summon_chars_data array
"DARKSOULS.exe"+8068A4:
cmp esi,09
"DARKSOULS.exe"+806ADE:
cmp ebx,2AC0//this is not index, but byte offset. So 1216*number of character slots

//believe this is length of summon_chars_data array, stored in struct
"DARKSOULS.exe"+8068A9:
mov [ecx-04],00000009

//bounds checks
"DARKSOULS.exe"+8037A7:
cmp edx,09
"DARKSOULS.exe"+8037BF:
cmp ecx,2AC0//1216*number of chars

[DISABLE]
"DARKSOULS.exe"+806848:
push 00000E50

"DARKSOULS.exe"+8068A4:
cmp esi,03
"DARKSOULS.exe"+806ADE:
cmp ebx,0E40

"DARKSOULS.exe"+8068A9:
mov [ecx-04],00000003

"DARKSOULS.exe"+8037A7:
cmp edx,02
"DARKSOULS.exe"+8037BF:
cmp ecx,00000E40
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>10320</ID>
          <Description>"info_about_summons.summon_char_types setup"</Description>
          <LastState Activated="1"/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//size of summon_char_types array in info_about_summons struct
"DARKSOULS.exe"+8068C3:
push 09

//write to a variable to alert us if inject was done in time
globalalloc(sucessful_phantomfix,4)

//init rest of the summon_char_types array to zero
alloc(newmem,64)
label(returnhere)
newmem:
mov [edx+02],bl
mov [edx+03],bl
mov [edx+04],bl
mov [edx+05],bl
mov [edx+06],bl
mov [edx+07],bl
mov [edx+08],bl
mov [sucessful_phantomfix], 1//success marker
call DARKSOULS.exe+1629C0
jmp returnhere

sucessful_phantomfix:
dd 0

"DARKSOULS.exe"+8068DF:
jmp newmem
nop
nop
nop
returnhere:

//hardcoded limits for summon_char_types length (some are &lt;=)
"DARKSOULS.exe"+802CB7:
cmp eax,09
"DARKSOULS.exe"+802C80:
cmp ecx,08
"DARKSOULS.exe"+92E7A9:
cmp ebx,08
"DARKSOULS.exe"+92E6AF:
cmp ebx,08
"DARKSOULS.exe"+92FB73:
cmp esi,08
"DARKSOULS.exe"+92FDF1:
cmp edi,08
"DARKSOULS.exe"+930431:
cmp eax,08
"DARKSOULS.exe"+931C66:
cmp esi,08
"DARKSOULS.exe"+928135:
cmp eax,08
"DARKSOULS.exe"+92B19A:
cmp edi,08
"DARKSOULS.exe"+AE2B8A:
cmp eax,08


[DISABLE]
"DARKSOULS.exe"+8068C3:
push 03

unregistersymbol(sucessful_phantomfix)
dealloc(sucessful_phantomfix)

dealloc(newmem)
"DARKSOULS.exe"+8068DF:
mov [edx+02],bl
call DARKSOULS.exe+1629C0
//Alt: db 88 5A 02 E8 D9 C0 95 FF

"DARKSOULS.exe"+802CB7:
cmp eax,03
"DARKSOULS.exe"+802C80:
cmp ecx,02
"DARKSOULS.exe"+92E7A9:
cmp ebx,02
"DARKSOULS.exe"+92E6AF:
cmp ebx,02
"DARKSOULS.exe"+92FB73:
cmp esi,02
"DARKSOULS.exe"+92FDF1:
cmp edi,02
"DARKSOULS.exe"+930431:
cmp eax,02
"DARKSOULS.exe"+931C66:
cmp esi,02
"DARKSOULS.exe"+928135:
cmp eax,02
"DARKSOULS.exe"+92B19A:
cmp edi,02
"DARKSOULS.exe"+AE2B8A:
cmp eax,02
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>19</ID>
      <Description>"max_allowed_summons"</Description>
      <LastState Value="4" RealAddress="04EB24FC"/>
      <VariableType>4 Bytes</VariableType>
      <Address>0137D82C</Address>
      <Offsets>
        <Offset>08c</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>10322</ID>
      <Description>"sucessful_phantomfix"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>sucessful_phantomfix</Address>
    </CheatEntry>
    <CheatEntry>
      <ID>22</ID>
      <Description>"connected players count"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>12</ID>
          <Description>"force total_num_connected_players to 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
//set the summoned player counts back to 0/1
mov     [edx+4], 0//num white
mov     [edx+8], 0//number black
mov     [edx+0C], 0//number dragon(i think)
mov     [edx+10], 1//number total

originalcode:
pop edi
pop esi
pop ebp
pop ebx
pop ecx

exit:
jmp returnhere

"DARKSOULS.exe"+AA1B0B:
jmp newmem
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DARKSOULS.exe"+AA1B0B:
pop edi
pop esi
pop ebp
pop ebx
pop ecx
//Alt: db 5F 5E 5D 5B 59
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>0</ID>
          <Description>"black"</Description>
          <LastState Value="00000000" RealAddress="0CCCF0A8"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>013784A0</Address>
          <Offsets>
            <Offset>8</Offset>
            <Offset>bec</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"total"</Description>
          <LastState Value="00000000" RealAddress="0CCCF0B0"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>013784A0</Address>
          <Offsets>
            <Offset>10</Offset>
            <Offset>bec</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>23</ID>
      <Description>"connected players count alt"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>10</ID>
          <Description>"force total_num_connected_players_secondary to 1"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>[ENABLE]
//code from here to '[DISABLE]' will be used to enable the cheat
alloc(newmem,2048)
label(returnhere)
label(originalcode)
label(exit)

newmem: //this is allocated memory, you have read,write,execute access
mov [esi+14],1//sets a secondary total_num_connected_players variable to 1

originalcode:
//mov [esi+14],eax
add esp,08

exit:
jmp returnhere

"DARKSOULS.exe"+AA18F7:
jmp newmem
nop
returnhere:


 
 
[DISABLE]
//code from here till the end of the code will be used to disable the cheat
dealloc(newmem)
"DARKSOULS.exe"+AA18F7:
mov [esi+14],eax
add esp,08
//Alt: db 89 46 14 83 C4 08
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>4</ID>
          <Description>"total again?"</Description>
          <LastState Value="00000001" RealAddress="0CCCF0B4"/>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>013784A0</Address>
          <Offsets>
            <Offset>14</Offset>
            <Offset>bec</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>21</ID>
      <Description>"connected players count alt (maybe models?)"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>16</ID>
          <Description>"red_phant_b"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>"DARKSOULS.exe"+00F7CE14</Address>
          <Offsets>
            <Offset>230</Offset>
            <Offset>564</Offset>
            <Offset>0</Offset>
            <Offset>490</Offset>
            <Offset>7F0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>17</ID>
          <Description>"red_phant_a"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>"DARKSOULS.exe"+00F7CE14</Address>
          <Offsets>
            <Offset>1AC</Offset>
            <Offset>524</Offset>
            <Offset>0</Offset>
            <Offset>4D0</Offset>
            <Offset>7F0</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>18</ID>
          <Description>"num_total_phants"</Description>
          <VariableType>4 Bytes</VariableType>
          <Address>"DARKSOULS.exe"+00F7D644</Address>
          <Offsets>
            <Offset>178</Offset>
            <Offset>290</Offset>
            <Offset>254</Offset>
            <Offset>CC</Offset>
            <Offset>288</Offset>
          </Offsets>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>25</ID>
      <Description>"tests"</Description>
      <LastState Value="" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols>
    <SymbolEntry>
      <Name>FrameRateWarnAOB</Name>
      <Address> 00D7841E</Address>
    </SymbolEntry>
    <SymbolEntry>
      <Name>sucessful_phantomfix</Name>
      <Address>018F0020</Address>
    </SymbolEntry>
  </UserdefinedSymbols>
  <Comments>51 8B 40 04 85 C0 74 2F 8B 0D  
</Comments>
  <LuaScript>AddressList = getAddressList()

errorOnLookupFailure(false)
DefaultProccessName = "DARKSOULS.exe"
strings_add(getAutoAttachList(), DefaultProccessName)

-------------------------------------------------------------------------------

function activateOnAttach()
  local count = addresslist_getCount(AddressList)
  for i=0,count-1 do
    local record = addresslist_getMemoryRecord(AddressList, i)
    if record.getDescription() == 'Activate on Attach' then
       memoryrecord_freeze(record)
       break
    end
  end
end

function getProcessNameFromProcessID(iProcessID)
  if iProcessID &lt; 1 then return 0 end
  local plist = createStringlist()
  getProcesslist(plist)
  for i=1, strings_getCount(plist)-1 do
    local process = strings_getString(plist, i)
    local offset = string.find(process,'-')
    local pid = tonumber('0x'..string.sub(process,1,offset-1))
    local pname = string.sub(process,offset+1)
    if pid == iProcessID then return pname end
  end
  return 0
end

function getOpenedProcessName()
  local process = getOpenedProcessID()
  if process ~= 0 and getProcessIDFromProcessName(DefaultProccessName) == getOpenedProcessID() then
    if checkOpenedProcess(DefaultProccessName) == true then return DefaultProccessName end
    return 0
  end
  return getProcessNameFromProcessID(getOpenedProcessID())
end

function checkOpenedProcess(process)
  if process == nil or process == 0 or process == false then
    process = getOpenedProcessID()
    if process ~= 0 and getProcessIDFromProcessName(DefaultProccessName) == process then
      process = DefaultProccessName
    end
  end
  if type(process) == "number" then process = getProcessNameFromProcessID(process) end
  if process ~= nil and process ~= 0 then
    if readInteger(process) then return true end
  end
  return false
end

function checkProccessAttached()
  if DefaultProccessName == nil then return end
  if checkOpenedProcess() == false then openProcess(DefaultProccessName) end
end

function onOpenProcess(processid)
  activateOnAttach()
  beep()
end

if AttachTimer ~= nil then
  timer_setEnabled(AttachTimer, false); object_destroy(AttachTimer); AttachTimer = nil;
end
AttachTimer = createTimer(nil)
timer_onTimer(AttachTimer, checkProccessAttached)
timer_setInterval(AttachTimer,3000)
timer_setEnabled(AttachTimer, true)

</LuaScript>
</CheatTable>
